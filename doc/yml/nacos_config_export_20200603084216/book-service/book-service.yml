management: #开启SpringBoot Admin的监控
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

server:
  port: 625
spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/novel_cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: test123456
    driver-class-name: com.mysql.cj.jdbc.Driver 
  cloud:
    nacos:
      discovery:
        server-addr: 47.106.243.172:8848
        namespace: 3960c71a-62ac-4b8f-8c30-bba8e8143a0c     

####使用shardingJdbc时，
####所有的jdbcType都不能是LONGVARCHAR,否则会导致java.io.NotSerializableException: java.io.StringReader错误
##### 应该替换所有的 LONGVARCHAR 类型为VARCHAR

sharding:
  jdbc:
    datasource:
      names: ds0 #,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/novel_cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: test123456
#      ds1:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/novel_plus2
#        username: root
#        password: test123456
    config:
      sharding:
        props:
          sql.show: true
        tables:
          book_content:  #book_content表
            key-generator-column-name: id  #主键
            actual-data-nodes: ds${0}.book_content${0..9}  #数据节点
#            database-strategy:  #分库策略
#              inline:
#                sharding-column: book_id
#                algorithm-expression: ds${book_id % 10}
            table-strategy:  #分表策略
              inline:
                shardingColumn: index_id
                algorithm-expression: book_content${index_id % 10}

  